extends layout

block variables
  - var title = "Dashboard"

block content
  
  .section
    .section__inner
      h2.text-center.pt-5 Dashboard
      div
        | Welcome to your dashboard page, #{user.username}.  
        br
        | You'll find your added products here, manage your information and retrieve your invoices.
      if connections == false
        h4.mt-5(style="margin-bottom:250px;") You have no active connections yet, you can add them to the dashboard at the #[a(href="/marketplace", title="marketplace") marketplace]
      else 
        each connection in connections
          h3 #{connection.Platform}
          hr
          
          input(type="text" name="username" placeholder="Username for platform" value=connection.PlatformUsername required disabled="disabled").mb-3.pl-2.mr-2
          input(id=connection.Platform.replace('.','') type="password" name="password" placeholder="Password for platform" value=connection.PlatformPassword required disabled="disabled").mb-3.pl-2
          span.input-group-btn(onClick="reveal(\'"+connection.Platform.replace('.','')+"\')")
            button.btn.btn-default.reveal(type="button" style="height: 42px;margin-bottom: 5px;")
              i
                img(src="/images/eye-solid.png", alt="eye-icon" style="height:20px")
          br
          button.mb-5.btn(onClick="scrape(\'"+connection.Platform+"\', \'"+ connection.PlatformUsername + "\', \'"+ connection.PlatformPassword + "\', \'"+ user._id +"\')")
            | Get my invoices
          button.mb-5.ml-3.btn(onclick=`search('${connection.Platform.toLowerCase()}','${user._id}')`)
            | Refresh
            
          table.table.table-bordered(onload="search(\'"+ connection.Platform.toLowerCase()+"\',\'"+ user._id+"\')")
            thead
              tr
                th(scope="col") File             
                th(scope="col") date             
            tbody(id=(connection.Platform.replace('.','').toLowerCase() + "table"))
          
 
  | <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
  script.  
    function reveal(element){
      console.log(element); 
      var $pwd = $('#'+element);
      console.log($pwd);
      if ($pwd.attr('type') === 'password') {
          $pwd.attr('type', 'text');
      } else {
          $pwd.attr('type', 'password');
      }
    }
    
    const get = (platform, userId, cb) => {
          
          var url = '/files/getPdfs?platform='+platform+'&userId='+userId
          console.log(url)
          var xmlHttp = new XMLHttpRequest();
          xmlHttp.onreadystatechange = function() {
              if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
                  cb(false, JSON.parse(xmlHttp.responseText));
          }
          xmlHttp.open("GET", url, false); // true for asynchronous
          xmlHttp.send()

    }
    function search(platform, userId){
      console.log(platform);
      console.log(userId);

          get(platform,userId, function(err, json){
            if(json.data){
              let table = '';
              for (var i = 0; i < json.data.length; i++) {
                
                table += `
                <tr>
                  <td><a href="${json.data[i].location}" download>${json.data[i].name}</a></td>
                  <td>${json.data[i].date}</td>
                     

                </tr>`
              }
              console.log(platform.replace('.','')+'table');
              document.getElementById(platform.replace('.','')+'table').innerHTML = table;
            }      
          })
        }

      function scrape(platform, username, password, userId){
          var key = prompt("Please enter your encryption key", "encryption key")
          if (key != null) {        
            
              keyvar = ''
              for (let index = 0; index < 32; index++) {
                keyvar += key[index%key.length];
            }
          var params = {
            "username": username,
            "password": password,
            "userId": userId,
            "key": keyvar
          }
          var xmlHttp = new XMLHttpRequest();
          xmlHttp.onreadystatechange = function() {
              if (xmlHttp.readyState == 4 && xmlHttp.status == 200){
                  console.log("Ready")
              }
          }
          xmlHttp.open("POST", `http://localhost:5002/${platform.toLowerCase().replace('.','')}scraper/`, true); // true for asynchronous
          xmlHttp.send(JSON.stringify(params));
          }
        }

       